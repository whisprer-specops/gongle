services:
  # Main Gongle application
  gongle:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gongle-app
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://gongle:${DB_PASSWORD}@postgres:5432/gongle_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config/ssl:/etc/ssl/certs:ro  # For HTTPS certificates
    depends_on:
      - postgres
      # - redis
    networks:
      - gongle-network

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: gongle-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=gongle
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=gongle_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Remove in production
    networks:
      - gongle-network

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: gongle-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - gongle-network

  # Nginx (if you want a separate nginx container)
  # nginx:
  #   image: nginx:alpine
  #   container_name: gongle-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./gongle-web/static:/usr/share/nginx/html/static:ro
  #     - ./config/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - gongle
  #   networks:
  #     - gongle-network

  # Prometheus for monitoring (optional)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: gongle-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   networks:
  #     - gongle-network

  # Grafana for visualization (optional)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: gongle-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./config/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - gongle-network

networks:
  gongle-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:

# Development override (create docker-compose.override.yml)
# version: '3.8'
# 
# services:
#   gongle:
#     build:
#       context: .
#       dockerfile: Dockerfile.dev
#     environment:
#       - FLASK_ENV=development
#       - FLASK_DEBUG=1
#     volumes:
#       - ./gongle-web:/app/gongle-web
#       - ./integration:/app/integration
#     command: flask run --host=0.0.0.0 --reload