user root;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https://cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; font-src 'self' https://cdnjs.cloudflare.com; img-src 'self' data: https:;" always;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=encryption_limit:10m rate=5r/s;

    # Upstream Flask app
    upstream flask_app {
        server 127.0.0.1:5000 fail_timeout=0;
    }

    # Upstream Rust Theater API (if using HTTP API mode)
    upstream rust_theater {
        server 127.0.0.1:8080 fail_timeout=0;
    }

    # Main server
    server {
        listen 80;
        server_name _;
        
        # For production, redirect to HTTPS
        # return 301 https://$host$request_uri;
        
        root /app/gongle-web/static;
        
        # Security
        client_max_body_size 10M;
        client_body_buffer_size 128k;
        
        # Static files
        location /static/ {
            alias /app/gongle-web/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Theater protection UI
        location /theater {
            try_files /theater.html =404;
        }
        
        # API routes with rate limiting
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for long-running encryption operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Special rate limit for encryption endpoints
        location /api/theater/encrypt {
            limit_req zone=encryption_limit burst=5 nodelay;
            
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Longer timeout for theatrical delays
            proxy_read_timeout 120s;
        }
        
        # Rust Theater API (if using HTTP mode)
        location /rust-api/ {
            proxy_pass http://rust_theater/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Main app
        location / {
            try_files $uri @flask;
        }
        
        location @flask {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /app/gongle-web/static;
            internal;
        }
        
        location = /50x.html {
            root /app/gongle-web/static;
            internal;
        }
    }

    # HTTPS server (uncomment for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name gongle.example.com;
    #     
    #     ssl_certificate /etc/ssl/certs/gongle.crt;
    #     ssl_certificate_key /etc/ssl/private/gongle.key;
    #     
    #     # Modern SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # SSL session caching
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # OCSP stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     
    #     # ... rest of configuration same as HTTP server ...
    # }
}